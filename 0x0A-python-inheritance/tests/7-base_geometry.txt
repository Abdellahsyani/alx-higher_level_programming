Unit Testing for 7-base_gemetry module using doctest.
*****************************************************
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
    ~~~
Exception: area() is not implemented
>>> bg.integer_validator("width", 99)
>>> bg.integer_validator("name", "Hany")
Traceback (most recent call last):
    ~~~
TypeError: name must be an integer
>>> bg.integer_validator("age", -5)
Traceback (most recent call last):
    ~~~
ValueError: age must be greater than 0
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
    ~~~
ValueError: my_int must be greater than 0
>>> bg.integer_validator(-5)   # doctest: +ELLIPSIS
Traceback (most recent call last):
    ~~~
TypeError: ...
>>> bg.integer_validator()    # doctest: +ELLIPSIS
Traceback (most recent call last):
    ~~~
TypeError: ...


>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ~~~
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ~~~
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ~~~
TypeError: age must be an integer
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ~~~
TypeError: age must be an integer
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ~~~
TypeError: age must be an integer
